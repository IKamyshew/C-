@model IEnumerable<Academy08._04.Models.Marks>
@{
    ViewBag.Title = "Marks";
}

<table>
    <tr>
        <td>
            @Html.ActionLink("To personal page", "PersonalPage", "Interface", null, null)
        </td>
        <td>
            @Html.ActionLink("Log out", "LogOff", "Account", null, null)
        </td>
    </tr>
</table>
            
<h2>Marks</h2>

<form method="post" action="Marks">
    <table>
        <tr>
            <td>From: </td>
            <td>@Html.DropDownList("date_from", ViewBag.DataFilter as SelectList)</td>
            <td>to: </td>
            <td>@Html.DropDownList("date_to", ViewBag.DataFilter as SelectList)</td>
            <td><input type="submit" value="Filter" /> </td>
        </tr>
    </table>
</form>

<table border="1">
    <tr>
        <th>
            Subject
        </th>
        @if (ViewBag.DataHeader != null)
        {
            
            foreach (var date in ViewBag.DataHeader as IEnumerable<Academy08._04.Models.Marks>)
            {
                <th>
                    @Html.DisplayFor(dateItem => date.Date)
                </th>
            }
            <th>
                Average
            </th>
        }
    </tr>
        @{
            double finalAverage = 0; 
            int averCounter = 0;
        if (ViewBag.Subjects != null)
        {
            List<Academy08._04.Models.Marks> dates = ViewBag.DataHeader;
            foreach (var subj in ViewBag.Subjects as IEnumerable<Academy08._04.Models.Subject>)
            {
                <tr>
                    <th>
                        @Html.DisplayFor(subjItem => subj.Name)
                    </th>
                    @{
                IEnumerable<Academy08._04.Models.Marks> marks = Model.Where(m => m.SubjectId == subj.Id).OrderBy(d => d.Date) as IEnumerable<Academy08._04.Models.Marks>;
                        Academy08._04.Models.Marks mark = null;
                        bool flag = false;
                        double average = 0.0;
                    }
                    @for (int dateIndex = 0; dateIndex < dates.Count; dateIndex++)
                    {
                        foreach (var checkMark in marks)
                        {
                            if (checkMark.Date == dates[dateIndex].Date)
                            {
                                flag = true;
                                mark = checkMark;
                                average+= checkMark.CurrentMark;
                            }
                        }
                        if (flag)
                        {
                            flag = false;
                            <td>
                                @Html.DisplayFor(markItem => mark.CurrentMark)
                            </td>
                        }
                        else
                        {
                            <td>
                                -
                            </td>
                        }
                           
                    }
                        @if (marks.Count() != 0)
                        {
                            average = Math.Round(average / marks.Count(), 1);
                            finalAverage += average;
                            averCounter++;
                        }
                        <td>
                            @average
                        </td>
                </tr>
            }

        }
    <tr>
        @{finalAverage = Math.Round(finalAverage / averCounter, 1);}
        <th>
            Σ
        </th>
        @if (ViewBag.DataHeader != null)
        {

            foreach (var date in ViewBag.DataHeader as IEnumerable<Academy08._04.Models.Marks>)
            {
                <th>
                    -
                </th>
            }
            <th>
                @finalAverage
            </th>
        }
    </tr>
}
</table>